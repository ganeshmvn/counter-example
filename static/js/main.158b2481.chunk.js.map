{"version":3,"sources":["reducers/CounterReducer.js","actions/CounterActions.js","store.js","containers/Counter.js","index.js"],"names":["initialState","count","counterReducer","state","action","type","store","createStore","Counter","increment","props","dispatch","decrement","reset","className","this","onClick","React","Component","connect","ReactDOM","render","document","getElementById"],"mappings":"6NAEA,IAAMA,EAAe,CACnBC,MAAO,GAsBMC,MAnBf,WAAuD,IAA/BC,EAA8B,uDAAtBH,EAAcI,EAAQ,uCACpD,OAAQA,EAAOC,MACb,ICRqB,YDSnB,MAAO,CACLJ,MAAOE,EAAMF,MAAQ,GAEzB,ICXqB,YDYnB,MAAO,CACLA,MAAOE,EAAMF,MAAQ,GAEzB,ICdiB,QDef,MAAO,CACLA,MAAO,GAEX,QACE,OAAOE,I,OEhBEG,EAFDC,YAAYL,G,sCCEpBM,G,kNACJC,UAAY,WACV,EAAKC,MAAMC,SFFN,CAAEN,KALc,e,EEUvBO,UAAY,WACV,EAAKF,MAAMC,SFFN,CAAEN,KARc,e,EEavBQ,MAAQ,WACN,EAAKH,MAAMC,SFFN,CAAEN,KAXU,W,uDEiBjB,OACE,yBAAKS,UAAU,WACb,uCACA,wBAAIA,UAAU,SAASC,KAAKL,MAAMT,OAClC,6BACE,4BAAQe,QAASD,KAAKH,WAAtB,KACA,4BAAQI,QAASD,KAAKF,OAAtB,SACA,4BAAQG,QAASD,KAAKN,WAAtB,W,GArBYQ,IAAMC,YAgCbC,eAJS,SAAAhB,GAAK,MAAK,CAChCF,MAAOE,EAAMF,SAGAkB,CAAyBX,GC9BxCY,IAASC,OACP,kBAAC,IAAD,CAAUf,MAAOA,GACf,kBAAC,EAAD,OAEFgB,SAASC,eAAe,W","file":"static/js/main.158b2481.chunk.js","sourcesContent":["import { INCREMENT, DECREMENT, RESET } from \"../actions/CounterActions\";\r\n\r\nconst initialState = {\r\n  count: 0\r\n};\r\n\r\nfunction counterReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case INCREMENT:\r\n      return {\r\n        count: state.count + 1\r\n      };\r\n    case DECREMENT:\r\n      return {\r\n        count: state.count - 1\r\n      };\r\n    case RESET:\r\n      return {\r\n        count: 0\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default counterReducer;\r\n","export const INCREMENT = \"INCREMENT\";\r\nexport const DECREMENT = \"DECREMENT\";\r\nexport const RESET = \"RESET\";\r\n\r\nexport function increment() {\r\n  return { type: INCREMENT };\r\n}\r\n\r\nexport function decrement() {\r\n  return { type: DECREMENT };\r\n}\r\n\r\nexport function reset() {\r\n  return { type: RESET };\r\n}\r\n","import counterReducer from \"./reducers/CounterReducer\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Counter.css\";\r\nimport { increment, decrement, reset } from \"../actions/CounterActions\";\r\n\r\nclass Counter extends React.Component {\r\n  increment = () => {\r\n    this.props.dispatch(increment());\r\n  };\r\n\r\n  decrement = () => {\r\n    this.props.dispatch(decrement());\r\n  };\r\n\r\n  reset = () => {\r\n    this.props.dispatch(reset());\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"counter\">\r\n        <h2>Counter</h2>\r\n        <h2 className=\"count\">{this.props.count}</h2>\r\n        <div>\r\n          <button onClick={this.decrement}>-</button>\r\n          <button onClick={this.reset}>Reset</button>\r\n          <button onClick={this.increment}>+</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  count: state.count\r\n});\r\n\r\nexport default connect(mapStateToProps)(Counter);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport Counter from \"./containers/Counter\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Counter />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}